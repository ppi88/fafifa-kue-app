// Lokasi: src/components/StokTableView.tsx

import React, { useState, useMemo } from 'react'; 
import ActionButtons from './ActionButtons';
import { StokItem } from '../types/StokItem'; 
import { getHari, formatTanggalID } from '../utils/dateUtils'; 

interface StokTableViewProps {
Â  filteredData: StokItem[] & { sisaKue?: number }[]; // Asumsi sisaKue ada
Â  handleEdit: (id: number) => void;
Â  handleDelete: (id: number) => void;
}

const getKueKeys = (data: StokItem) => {
    return Object.keys(data).filter(key => 
        key !== 'id' && key !== 'tanggal' && key !== 'mod' && typeof data[key as keyof StokItem] === 'number'
    ) as (keyof StokItem)[];
}

const formatKueName = (key: string) => {
    return key.replace(/([A-Z])/g, ' $1')
               .replace(/^./, str => str.toUpperCase());
}

const th = "px-3 py-2 text-center font-semibold sticky top-0 bg-rose-600/90 backdrop-blur-sm";
const td = "px-3 py-2 text-center border-t border-gray-200 text-gray-700";

const StokTableView: React.FC<StokTableViewProps> = ({ filteredData, handleEdit, handleDelete }) => {
    
    // Ambil daftar kunci kue sekali saja menggunakan useMemo
    const kueKeys = useMemo(() => filteredData.length > 0 ? getKueKeys(filteredData[0]) : [], [filteredData]);
    
    // Hitung colspan untuk dinamis (1 tanggal + N kue + 1 Aksi)
    const colSpan = 2 + kueKeys.length; 
    
    // ðŸŽ¯ Logika Sisa Kue Terakhir
    const lastData = filteredData.length > 0 ? filteredData[0] : null;
    // Asumsi properti sisaKue ada pada StokItem
    const sisaKueTerakhir = lastData && lastData.sisaKue !== undefined ? lastData.sisaKue : 0; 
    

Â  Â  const [hoveredId, setHoveredId] = useState<number | null>(null);
Â  Â  const [activeId, setActiveId] = useState<number | null>(null);
Â  Â  const [selectedId, setSelectedId] = useState<number | null>(null);

Â  Â  const handleClick = (id: number) => {
Â  Â  Â  Â  setSelectedId(selectedId === id ? null : id);
Â  Â  Â  Â  setActiveId(null); 
Â  Â  };

Â  Â  const handleDoubleClick = (id: number) => {
Â  Â  Â  Â  setActiveId(activeId === id ? null : id); 
Â  Â  Â  Â  setSelectedId(null); 
Â  Â  };

Â  Â  return (
Â  Â  Â  Â  <div className="hidden sm:block overflow-x-auto rounded-lg shadow-md">
Â  Â  Â  Â  Â  Â  <table className={`min-w-[${700 + kueKeys.length * 80}px] w-full border-collapse text-xs sm:text-sm md:text-base`}> 
Â  Â  Â  Â  Â  Â  Â  Â  <thead>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <tr className="bg-gradient-to-r from-rose-500 to-rose-600 text-white">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <th className={th}>Hari & Tanggal</th>
                        
                        {kueKeys.map(key => (
                            <th key={key as string} className={th}>{formatKueName(key as string)}</th>
                        ))}
                        
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <th className={th}>Aksi</th>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </tr>
Â  Â  Â  Â  Â  Â  Â  Â  </thead>
Â  Â  Â  Â  Â  Â  Â  Â  <tbody>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {filteredData.map((item, idx) => {
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  const isSelected = selectedId === item.id;
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  const isActive = activeId === item.id;
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  const isEvenRow = idx % 2 === 0;

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  let bgColor = isEvenRow ? "bg-gray-50" : "bg-white";

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  if (isActive) {
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  bgColor = 'bg-rose-200 shadow-md ring-1 ring-rose-500 font-medium';
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  } else if (isSelected) {
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  bgColor = 'bg-rose-100 ring-1 ring-rose-200'; 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  } 

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  return (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <tr
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  key={item.id}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ${bgColor}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  transition-all duration-200 ease-in-out
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ${!isActive && !isSelected ? 'hover:bg-rose-50 hover:shadow-sm hover:scale-[1.002]' : ''}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  `}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onMouseEnter={() => setHoveredId(item.id)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onMouseLeave={() => setHoveredId(null)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => handleClick(item.id)} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onDoubleClick={() => handleDoubleClick(item.id)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <td 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`${td} bg-gradient-to-r from-rose-400 to-rose-500 text-white font-semibold`} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="font-medium">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {getHari(item.tanggal)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <br />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="text-sm text-rose-100">{formatTanggalID(item.tanggal)}</span> 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </td>
                                
                                {kueKeys.map(key => (
                                    <td key={key as string} className={td}>
                                        {item[key as keyof StokItem] as number}
                                    </td>
                                ))}
                                
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <td className={td}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <ActionButtons 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  id={item.id} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onEdit={handleEdit} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onDelete={handleDelete}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  size={16}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </td>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </tr>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  );
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  })}

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {filteredData.length === 0 && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <tr>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <td colSpan={colSpan} className="text-center py-4 text-gray-500">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Tidak ada data untuk periode ini.
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </td>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </tr>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  )}
                    
                    {/* ðŸŽ¯ BARIS SISA KUE SEBELUMNYA (FOOTER) */}
                    {filteredData.length > 0 && (
                        <tr className="bg-green-50/70 border-t-4 border-green-300">
                            {/* Cell pertama span semua kolom kecuali kolom sisa itu sendiri */}
                            <td 
                                colSpan={colSpan - 1} // Semua kolom kecuali yang terakhir (Aksi)
                                className="px-3 py-3 text-left font-bold text-sm text-green-700"
                            >
                                Sisa Kue Tanggal Sebelumnya (otomatis dari data terakhir):
                            </td>
                            
                            {/* Cell untuk nilai sisa kue terakhir */}
                            <td className="px-3 py-3 text-center font-extrabold text-xl text-green-800">
                                {sisaKueTerakhir}
                            </td>
                            
                            {/* Cell Aksi dikosongkan */}
                            <td className={td}></td>
                        </tr>
                    )}
                    {/* ------------------------------------------- */}
Â  Â  Â  Â  Â  Â  Â  Â  </tbody>
Â  Â  Â  Â  Â  Â  </table>
Â  Â  Â  Â  </div>
Â  Â  );
};

export default StokTableView;