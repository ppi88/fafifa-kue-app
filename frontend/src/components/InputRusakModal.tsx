// Lokasi: src/components/InputRusakModal.tsx

import React, { useState, useMemo, useRef, useEffect } from 'react'; 
import { StokItem } from '../types/StokItem'; 
import { X, Save, List, Hash } from 'lucide-react'; 
import { formatTanggalID } from '../utils/dateUtils'; 

// FUNGSI UTILITY HARUS DIDEKLARASIKAN DI SINI
const getKueKeys = (data: StokItem) => {
Â  Â  // ðŸŽ¯ Definisikan urutan kunci secara EKSPLISIT agar 'mod' (Kantong Kresek) selalu muncul 
    // tepat di bawah 'moci', terlepas dari nilai stok awalnya (stokData[key]).
    const orderedKeys: (keyof StokItem)[] = [
        'boluKukus', 
        'rotiGabin', 
        'pastel', 
        'martabakTelur', 
        'moci', 
        'mod' // ðŸŽ¯ Inilah Lainnya (Kantong Kresek)
    ];

    // Filter untuk memastikan hanya kunci yang benar-benar ada di StokItem 
    // dan bertipe number yang digunakan, menjamin kompatibilitas.
    return orderedKeys.filter(key => typeof data[key as keyof StokItem] === 'number');
}
// -------------------------------------------------------------

interface InputRusakModalProps {
Â  Â  stokData: StokItem;
Â  Â  onClose: () => void;
Â  Â  onSave: (dataRusak: { id: number, rusak: Record<keyof StokItem, number> }) => void;
}

const InputRusakModal: React.FC<InputRusakModalProps> = ({ stokData, onClose, onSave }) => {
Â  Â  
Â  Â  const kueKeys = getKueKeys(stokData); 
Â  Â  // totalStokAwal dihitung hanya dari kue (tidak termasuk 'mod' / Kantong Kresek)
Â  Â  const totalStokAwal = useMemo(() => {
        return kueKeys
            .filter(key => key !== 'mod')
            .reduce((total, key) => total + (stokData[key] as number), 0);
    }, [stokData, kueKeys]);
Â  Â  
Â  Â  const [inputMode, setInputMode] = useState<'detail' | 'manual'>('detail');
Â  Â  const [containerHeight, setContainerHeight] = useState('auto');
Â  Â  const detailRef = useRef<HTMLDivElement>(null);
Â  Â  const manualRef = useRef<HTMLDivElement>(null);

Â  Â  // 1. State Rincian (Mode Detail)
Â  Â  const initialRusak = kueKeys.reduce((acc, key) => {
Â  Â  Â  Â  // Gunakan nilai yang sudah ada di stokData jika sudah pernah disimpan, kalau tidak, mulai dari 0.
        // Asumsi: Jika data ini adalah modal edit, 'rusak' mungkin sudah ada. Kita asumsikan 0 untuk kasus ini 
        // karena ini adalah modal input RUSAK.
Â  Â  Â  Â  acc[key] = 0; // Mulai dari 0
Â  Â  Â  Â  return acc;
Â  Â  }, {} as Record<keyof StokItem, number>);
Â  Â  const [rusakData, setRusakData] = useState<Record<keyof StokItem, number>>(initialRusak);

Â  Â  // 2. State Manual (Mode Manual)
Â  Â  const [totalRusakManual, setTotalRusakManual] = useState<number>(0);

Â  Â  // HITUNG TOTAL RUSAK OTOMATIS (Dipertahankan dan akan ditampilkan)
Â  Â  const totalRusakOtomatis = useMemo(() => {
Â  Â  Â  Â  return kueKeys.reduce((total, key) => total + rusakData[key], 0);
Â  Â  }, [rusakData, kueKeys]);

Â  Â  // Efek untuk menyesuaikan tinggi kontainer utama
Â  Â  useEffect(() => {
Â  Â  Â  Â  if (inputMode === 'detail' && detailRef.current) {
Â  Â  Â  Â  Â  Â  setContainerHeight(`${detailRef.current.offsetHeight}px`);
Â  Â  Â  Â  } else if (inputMode === 'manual' && manualRef.current) {
Â  Â  Â  Â  Â  Â  setContainerHeight(`${(manualRef.current.offsetHeight) + 16}px`); 
Â  Â  Â  Â  }
Â  Â  }, [inputMode, rusakData, totalRusakManual]); 
Â  Â  
Â  Â  // Handler Mode Detail
Â  Â  const handleChangeDetail = (e: React.ChangeEvent<HTMLInputElement>, key: keyof StokItem) => {
Â  Â  Â  Â  const rawValue = e.target.value;
Â  Â  Â  Â  const value = parseInt(rawValue) || 0;
Â  Â  Â  Â  
Â  Â  Â  Â  // Batasan stok hanya berlaku untuk jenis kue, BUKAN untuk 'mod' (Kantong Kresek)
Â  Â  Â  Â  let finalValue = Math.max(0, value);

Â  Â  Â  Â  if (key !== 'mod') {
Â  Â  Â  Â  Â  Â  const maxStok = stokData[key] as number;
Â  Â  Â  Â  Â  Â  finalValue = Math.min(finalValue, maxStok); 
Â  Â  Â  Â  }
Â  Â  Â  Â  
Â  Â  Â  Â  setRusakData(prev => ({
Â  Â  Â  Â  Â  Â  ...prev,
Â  Â  Â  Â  Â  Â  [key]: finalValue,
Â  Â  Â  Â  }));
Â  Â  };
Â  Â  
Â  Â  // Handler Mode Manual
Â  Â  const handleChangeManual = (e: React.ChangeEvent<HTMLInputElement>) => {
Â  Â  Â  Â  const value = parseInt(e.target.value) || 0;
Â  Â  Â  Â  const finalValue = Math.min(Math.max(0, value), totalStokAwal);
Â  Â  Â  Â  setTotalRusakManual(finalValue);
Â  Â  };

Â  Â  // Fungsi untuk mengubah nama properti menjadi label yang mudah dibaca
Â  Â  const getLabel = (key: keyof StokItem): string => {
Â  Â  Â  Â  switch (key) {
Â  Â  Â  Â  Â  Â  case 'boluKukus': return 'Bolu Kukus';
Â  Â  Â  Â  Â  Â  case 'rotiGabin': return 'Roti Gabin';
Â  Â  Â  Â  Â  Â  case 'pastel': return 'Pastel';
Â  Â  Â  Â  Â  Â  case 'martabakTelur': return 'Martabak Telur';
Â  Â  Â  Â  Â  Â  case 'moci': return 'Moci';
            // ðŸŽ¯ LABEL BARU DENGAN JUDUL YANG DIMINTA
Â  Â  Â  Â  Â  Â  case 'mod': return 'Lainnya (Kantong Kresek)';
Â  Â  Â  Â  Â  Â  default: return key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase());
Â  Â  Â  Â  }
Â  Â  };


Â  Â  const handleSubmit = (e: React.FormEvent) => {
Â  Â  Â  Â  e.preventDefault();
Â  Â  Â  Â  
Â  Â  Â  Â  let rusakToSend: Record<keyof StokItem, number>;

Â  Â  Â  Â  if (inputMode === 'manual') {
Â  Â  Â  Â  Â  Â  // Simpan total manual ke 'mod' (Kantong Kresek) dan sisanya 0
Â  Â  Â  Â  Â  Â  rusakToSend = kueKeys.reduce((acc, key) => {
Â  Â  Â  Â  Â  Â  Â  Â  if (key === 'mod') { 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  acc[key] = totalRusakManual;
Â  Â  Â  Â  Â  Â  Â  Â  } else {
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  acc[key] = 0;
Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  Â  Â  return acc;
Â  Â  Â  Â  Â  Â  }, {} as Record<keyof StokItem, number>);

Â  Â  Â  Â  } else {
Â  Â  Â  Â  Â  Â  rusakToSend = rusakData;
Â  Â  Â  Â  }
Â  Â  Â  Â  
Â  Â  Â  Â  onSave({
Â  Â  Â  Â  Â  Â  id: stokData.id,
Â  Â  Â  Â  Â  Â  rusak: rusakToSend, 
Â  Â  Â  Â  });
Â  Â  };

Â  Â  return (
Â  Â  Â  Â  <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-1" onClick={onClose}> 
Â  Â  Â  Â  Â  Â  <div 
Â  Â  Â  Â  Â  Â  Â  Â  className="bg-white rounded-lg shadow-xl max-w-full w-[85%] sm:max-w-sm max-h-[85vh] flex flex-col"
Â  Â  Â  Â  Â  Â  Â  Â  onClick={e => e.stopPropagation()}
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  {/* HEADER - Warna Soft Amber */}
Â  Â  Â  Â  Â  Â  Â  Â  <div className="p-2 border-b flex justify-between items-center bg-amber-500 text-white rounded-t-lg flex-shrink-0">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <h2 className="text-xs font-bold sm:text-lg">Input Rusak/Dimakan - {formatTanggalID(stokData.tanggal)}</h2>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button onClick={onClose} className="p-1 rounded-full hover:bg-white/20 transition-all">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <X size={18} />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  <form onSubmit={handleSubmit} className="flex-grow overflow-y-auto p-3 space-y-3"> 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* TOTAL STOK AWAL - Warna Orange yang Selaras */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="p-2 bg-orange-100 rounded-md text-center text-sm font-semibold text-gray-800">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  TOTAL STOK AWAL (Kue): {totalStokAwal}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* TOMBOL MODE */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className='flex justify-center space-x-2 p-1 border-b border-gray-200 mb-4'>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="button"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => setInputMode('detail')}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`flex items-center space-x-1 px-3 py-1 text-xs rounded-full transition-colors ${
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  inputMode === 'detail' ? 'bg-amber-600 text-white shadow-md' : 'bg-gray-200 text-gray-700'
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <List size={14} /> <span>Mode Rincian</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="button"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => setInputMode('manual')}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`flex items-center space-x-1 px-3 py-1 text-xs rounded-full transition-colors ${
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  inputMode === 'manual' ? 'bg-orange-600 text-white shadow-md' : 'bg-gray-200 text-gray-700'
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Hash size={14} /> <span>Mode Manual</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* CONTAINER INPUT (Sliding Effect) */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="relative overflow-hidden transition-all duration-500" 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  style={{ height: containerHeight }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* MODE RINCIAN (DETAIL) */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ref={detailRef}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  w-full absolute top-0 transition-transform duration-500 ease-in-out
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ${inputMode === 'detail' 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ? 'translate-x-0' 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  : '-translate-x-full' 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  `}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className='space-y-0'> 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-xs text-gray-700 italic border-l-4 border-amber-500 pl-2 bg-amber-50 p-1 mb-2 rounded-sm">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Masukkan jumlah **rusak/dimakan** per jenis kue.
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {kueKeys.map((key) => {
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  const displayValue = rusakData[key] === 0 ? '' : rusakData[key];
                                    
                                    // ðŸŽ¯ Tentukan apakah ini baris Lainnya (Kantong Kresek)
                                    const isModRow = key === 'mod';

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  return (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div key={key} className="flex justify-between items-center py-0 border-b border-gray-100"> 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <label className="text-xs font-medium text-gray-700 w-3/5 pr-3 pl-1 py-0"> 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {getLabel(key)} 
                                            {/* Hanya tampilkan Stok Awal jika BUKAN Kantong Kresek */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {!isModRow && 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="text-gray-500 font-normal block"> (Stok Awal: {stokData[key] as number})</span>
                                                }
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="number"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  name={key}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  value={displayValue} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => handleChangeDetail(e, key)}
                                            // Warna input untuk 'mod' diubah agar menonjol
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`block w-2/5 rounded-md border-gray-300 shadow-inner focus:ring-amber-500 p-1 text-xs text-right transition-colors ${
                                                isModRow
                                                    ? 'bg-yellow-200 border-yellow-500 focus:border-yellow-700 font-bold' 
                                                    : 'bg-amber-100 border-amber-500 focus:border-amber-500'
                                                }`} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  min="0"
                                            // Batas maksimal hanya untuk jenis kue
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  max={!isModRow ? (stokData[key] as number) : undefined} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  );
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  })}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* ðŸŽ¯ TOTAL RUSAK OTOMATIS DITAMPILKAN KEMBALI */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="pt-2 mt-2 border-t border-gray-200">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="text-sm font-bold text-gray-900 flex justify-between items-center bg-orange-100 px-2 py-1 rounded-md shadow-inner">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span>TOTAL RUSAK OTOMATIS:</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="text-lg text-orange-600">{totalRusakOtomatis}</span> 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* MODE MANUAL */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ref={manualRef}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  w-full absolute top-0 transition-transform duration-500 ease-in-out
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ${inputMode === 'manual' 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ? 'translate-x-0' 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  : 'translate-x-full' 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  `}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="space-y-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-xs text-gray-700 italic border-l-4 border-orange-600 pl-2 bg-orange-50 p-1 mb-2 rounded-sm">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Masukkan langsung **total** kue rusak/dimakan.
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="number"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  name="totalRusakManual"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  value={totalRusakManual === 0 ? '' : totalRusakManual}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleChangeManual}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="mt-0 block w-full rounded-md border-orange-500 shadow-inner focus:border-orange-700 focus:ring-orange-700 text-xl p-2 text-center font-bold bg-orange-100"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  min="0"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  max={totalStokAwal}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Masukkan Total Rusak/Dimakan"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  </form>

Â  Â  Â  Â  Â  Â  Â  Â  {/* FOOTER */}
Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex justify-end gap-2 p-2 border-t flex-shrink-0 bg-gray-50 rounded-b-lg w-full">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="button"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={onClose}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="px-2 py-1 text-xs font-medium text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 transition-colors"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Batal
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="submit"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={handleSubmit} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="flex items-center gap-1 px-2 py-1 text-xs font-medium text-white bg-amber-600 rounded-md hover:bg-amber-700 transition-colors shadow-md"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Save size={14} /> Simpan Rusak
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  );
};

export default InputRusakModal;